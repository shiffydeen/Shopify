{
  "version": 3,
  "sources": ["../../../node_modules/.pnpm/is-wsl@3.1.0/node_modules/is-wsl/index.js", "../../../node_modules/.pnpm/is-inside-container@1.0.0/node_modules/is-inside-container/index.js", "../../../node_modules/.pnpm/is-docker@3.0.0/node_modules/is-docker/index.js"],
  "sourcesContent": ["import process from 'node:process';\nimport os from 'node:os';\nimport fs from 'node:fs';\nimport isInsideContainer from 'is-inside-container';\n\nconst isWsl = () => {\n\tif (process.platform !== 'linux') {\n\t\treturn false;\n\t}\n\n\tif (os.release().toLowerCase().includes('microsoft')) {\n\t\tif (isInsideContainer()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\ttry {\n\t\treturn fs.readFileSync('/proc/version', 'utf8').toLowerCase().includes('microsoft')\n\t\t\t? !isInsideContainer() : false;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport default process.env.__IS_WSL_TEST__ ? isWsl : isWsl();\n", "import fs from 'node:fs';\nimport isDocker from 'is-docker';\n\nlet cachedResult;\n\n// Podman detection\nconst hasContainerEnv = () => {\n\ttry {\n\t\tfs.statSync('/run/.containerenv');\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport default function isInsideContainer() {\n\t// TODO: Use `??=` when targeting Node.js 16.\n\tif (cachedResult === undefined) {\n\t\tcachedResult = hasContainerEnv() || isDocker();\n\t}\n\n\treturn cachedResult;\n}\n", "import fs from 'node:fs';\n\nlet isDockerCached;\n\nfunction hasDockerEnv() {\n\ttry {\n\t\tfs.statSync('/.dockerenv');\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n}\n\nfunction hasDockerCGroup() {\n\ttry {\n\t\treturn fs.readFileSync('/proc/self/cgroup', 'utf8').includes('docker');\n\t} catch {\n\t\treturn false;\n\t}\n}\n\nexport default function isDocker() {\n\t// TODO: Use `??=` when targeting Node.js 16.\n\tif (isDockerCached === undefined) {\n\t\tisDockerCached = hasDockerEnv() || hasDockerCGroup();\n\t}\n\n\treturn isDockerCached;\n}\n"],
  "mappings": ";;;;;AAAA;AAAA,OAAO,aAAa;AACpB,OAAO,QAAQ;AACf,OAAOA,SAAQ;;;ACFf;AAAA,OAAOC,SAAQ;;;ACAf;AAAA,OAAO,QAAQ;AAEf,IAAI;AAEJ,SAAS,eAAe;AACvB,MAAI;AACH,cAAG,SAAS,aAAa,GAClB;AAAA,EACR,QAAQ;AACP,WAAO;AAAA,EACR;AACD;AAEA,SAAS,kBAAkB;AAC1B,MAAI;AACH,WAAO,GAAG,aAAa,qBAAqB,MAAM,EAAE,SAAS,QAAQ;AAAA,EACtE,QAAQ;AACP,WAAO;AAAA,EACR;AACD;AAEe,SAAR,WAA4B;AAElC,SAAI,mBAAmB,WACtB,iBAAiB,aAAa,KAAK,gBAAgB,IAG7C;AACR;;;ADzBA,IAAI,cAGE,kBAAkB,MAAM;AAC7B,MAAI;AACH,WAAAC,IAAG,SAAS,oBAAoB,GACzB;AAAA,EACR,QAAQ;AACP,WAAO;AAAA,EACR;AACD;AAEe,SAAR,oBAAqC;AAE3C,SAAI,iBAAiB,WACpB,eAAe,gBAAgB,KAAK,SAAS,IAGvC;AACR;;;ADjBA,IAAM,QAAQ,MAAM;AACnB,MAAI,QAAQ,aAAa;AACxB,WAAO;AAGR,MAAI,GAAG,QAAQ,EAAE,YAAY,EAAE,SAAS,WAAW;AAClD,WAAI,mBAAkB;AAOvB,MAAI;AACH,WAAOC,IAAG,aAAa,iBAAiB,MAAM,EAAE,YAAY,EAAE,SAAS,WAAW,IAC/E,CAAC,kBAAkB,IAAI;AAAA,EAC3B,QAAQ;AACP,WAAO;AAAA,EACR;AACD,GAEO,iBAAQ,QAAQ,IAAI,kBAAkB,QAAQ,MAAM;",
  "names": ["fs", "fs", "fs", "fs"]
}
